<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>