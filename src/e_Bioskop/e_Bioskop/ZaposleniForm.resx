<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>