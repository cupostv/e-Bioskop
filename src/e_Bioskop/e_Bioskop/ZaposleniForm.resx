<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gd+rhDnE86JMwAAAABJRU5ErkJggg==
</value>
  </data>
</root>