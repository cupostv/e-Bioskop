<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ks1Hh+N/AJt5EPuA0/GuAAAAAElFTkSuQmCC
</value>
  </data>
</root>