<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>