<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>