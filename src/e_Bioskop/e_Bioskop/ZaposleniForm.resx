<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>