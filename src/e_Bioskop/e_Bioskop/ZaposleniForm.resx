<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABmkSURBVHhe5Zt5cF1Xfcef9tXaJWuXZcnaLC/C8RaTBJLS
        IRSmkzIwpXSmpQx/AM+dlLaZdhgGJkMYeGUZ2mB3gBA8pKTEieNFlmTZ0rN2y1eSZVmLte+SF9l436Sr
        X7/f8+55vnp+kkX/hDPzzX3v3rP8fp/zO79z7nPkYBGHIwAKVF/+BMp7DkcQfVZf7M5f3lWSf+WFzX89
        91LZ3ut/vs1J3XjZc52j/qzMefnFMufsi1uc09QLpc6J56A9pc6xPSXO4V1UkXNwR5Gzf1uRs3fbBmdv
        2QZnd1mes2sLVJrrPGepvSTbaRRRmc4zG6g0Z3MelJvmbMhd62zITnbWZXrkTktwnqLWxjlPJcc5q5Nj
        nNUJMc4qKi7KeTyGinAei4pwHokKcx6JgMLCnIfCgp2HgoOd7wcHOt8LdOx93+H47FGHI1v7zasqozk5
        4bPPbvwhrvPTW/NksjBTpgqzZLooS2aLs2UW1xl8nynIhDJkegOUny7TeekytT5NpnJTPVq3ViZzUmQy
        G8pKlslMKCNJJqj0RJlIS5CJ1AQZXxsvY9BoSpyMJMfKcFKsDCXGyADUn7BGLsZHS19ctPTGRUlPbJRc
        iImUrjWRcj46QjqjwuUc1BEZJm0RYWKEh8rZ8BBpDQuRM6Eh0hwSLE0hQdIYHCQNQYFSD50ODJAfBwQs
        VgQ45JDDcQ/6d/rthTC1s/gnE2X54o6JNN0OhznocMx3OxwLf0y6CJ/oG/UhfIf+WTk/Xlb4zMT2wgfv
        rolc5MMhUBpGhRFcx6BxaBKagqahWegSdBm6Cs1B16Dfo80NXG/iehu6A92D7kMPoIfQPLRgE78/gviM
        9Vj/LsT2t6AbEPu9Ds1BV6Er0CVoFpqGpqBJaBwag0Yg2j8EDUD9UB/UC/VA9PE0rh84HFcOOxzpjvEd
        Ra8OI8RJiQ0w+x4A0CjEjicgDsIBZyAacBmiMTTsGkQjaTAB0HgCoDN0SgOgs3RaSzvP5xoA260WAG3x
        BUCbfQFg9r0A4Kd0QIcxWYDwimN8Z5FrAOsWlOYHcJMA2HglABz8aQDohAZgjwI6TWmnteN69jUA9uMP
        AMf9QyPAFwCjoDwggAD2OkYBoB8JazkA7FQD4GC+AGgUjaORahlAGoA9CjQEBQKDS3CwIAmJBAaKGRTk
        dZ5iew2A/RIwx+B4GgDt0ABo32qXgAZQgcT4YWAgAGwvUABQYQkAdqIBsHMNgIMSgF4GGgCN1ADsUWCH
        QNF5ysBnKxnJBWgB9/Ts+4Y/+9bhzzF1+NMW2qUB0F4NgH4QAGdfA6DzHIsAKrE7KADD2wpcFzOTFIB+
        AGAjDYCdaQAcRAPg4MvlgRUhWE6WJyVJ+Xe+I+eqq6Xl4EF565VXpBz3HyAa2M4e/nr2fcOfNujwp220
        UwOg/U8FgG3ySLAFoA/7tB0AG2sA7FQD8F0GNMa+DFaCcBvOM/zPpaXJUFeXsCyaJv6zqD4fe/11FRWE
        oPvwN/u+4U+bdPjTVh3+9EGvfwLQ4a8BVOGsUB4WvNcxWJYHAIlPAGAnGoC/ZeAbBf6Wgh3CHcuxsf37
        lcPmgwdiLiyIOT+PL6bcxb2mPXtU/d9bdVea/ZXCn7bTD98ESOc1gBM4MCkAAwDQi1MaKsxfBAA2Wu0y
        sOcCf0vBGwmYfbWuIyLk7tiYAqBnnsV89EhdB7/7XdX3DSRIu/P22eeYy82+b/j7JkA63wURQHUoAYTt
        dVzcmufq8QPAdxlwEPsysEPwFwV2EDcAgCBuIfwX79xRztoBLDIKUCYOHFB9MgKWc97f7P8h4a8BnMTR
        uSKCADbnurpxRieAPgBgI/sy8BcFHHy5KNAQlkQDAPB6MzNTFu8y2FH8AJj8zW9Uv9cBYCXnl5t92rrc
        7BMAndcATuEdoiIKAHpLc10XUuNZwQvA3zLQUcBB/UWBHYKWFwQAEMYNArh3TznrNwIAgP1eAwC2V32i
        7RV8n8GVz7TzK80+bdez7xv+XgARoVIVFUEAOa4LeDMjgF4AYKPVRoEvBAWCs42DzS2uY8uROdwjiOur
        AMB+r6IdHWcksH+Oz++X8Z1j+zqvZ5+26tlfLvw1gBq8TVbFAEB3SY6rCwBQYb4HAEjMHgWE4C8KfCFQ
        NJCOcpB6iPVuEAKMZ0hfWwUA9ssZv4o2Nfj886ws+VlpqewH0E58vwq4tMGf86sJfw2gNjJcTnoAZLnO
        471cAcBDNlopCvxBoK7AMD5/B5n+t5/7nLy/d6/8NC9PmnGPSY3hPLcKAOz7OpxvDQmRun375C62ywVs
        kxdbWuTNrVulmmMBxhjqcDzK1/mVZl8DcEcBQFzUXkdXUZarEwDwgL8BqEb+omA5CBQNYtv3du6UyaEh
        5QzLLSS8dz/5SdVOJbWnABgHAPanwv5b31L3BGeFRavunVu35MAXviC/xfNJAB8FBNpF+Tq/3OxTBHA6
        OkJqCKCzAACSY58AoKNgJQjULAxpw/WDT39abt68qQxd5AHH2tsnceprDw1VAC4jnFcE8M47qs9p5hDM
        OAv7Yl0emnhgYqn4wQ/kV4iqcQKAaB/lz3nf2dcA6tYAQEIMAWS4ziXFynkAYOXVQqCmYCjayfEvfUnu
        0wkYqgxmsRx8iFkbzs5WiXI1ANgvI+B+ebm6J9YzFh6d1ckRpf6tt+QA6o0DxAAg+M7+cs57AcREipsA
        2vMyXB0AgAfzfOgPgi8AagzOc8DKl1+W+3SGzlszpIoF4tHAgMxERqpkeelpALAECEDlFESUKqynobLg
        u4ZQ5XIJlwNtoZ2+s68d9hUB1McCQLICkOZqT4zhAwWA0hCWi4JBUKehFQUFcmV6WhmzxHl+thyc+/zn
        vclyZhU5gP1PMcnhegXr3bx9Wz1bAgFFR9qHr70mJ1B3BDbR8ZVCX4sAGuKipD45DgByASBhDR88AcDf
        UuhHuHGdNsPI4aYmZYQ37FksEIsw/MpnP6scmcAMqeS2CgCEPAFnOKtqmZWVyaO+PvXcDkElRugR9D/P
        Py/nULcPbZ7mPEUAjfHRUr8WAIzcVFdb/FIA1HIQBqxBzjqdHkP8OL8wMyMzzz6rkuU4nQc0gph6CoAx
        AOAYXNcqyaItl9tIfLzcq6lRdewQVGJE6W9ulndRlxPUhbHsfvgTATTB50YCaM1JdRmggQdLAFC+EHrR
        OUO0MTFRLo+OqsH1FqUdWrh2Taa2bVOGjyJK6Aj3bF4nVwGAoMesJaYEx1TuAYT7Z86oeksiwfpc+Y1v
        SCPq9aC+rx++IoBmRH1jWgIBpLiMOP8AKDsEhhjvdX/zm2pQ3+TEPDDzmc+oMB7hEuGVAgBeJwhghZeh
        UQAg6FEA0MlW5RxrdofR/pE+Z+ilZvUziwk5Fh2tAJ5/ShQQQAvyXjMBtGQBQGwUH/gFQCkI6JTGdeCE
        drW7Ww3qTXwWiLnvf1+F8BCc1w5Qw2jL6/hyAKz2U9gGOcYwACjHIcJUCRh98tkU8ooqtvaEwW9VSLj8
        Van7KVFAAGew8zVnJgNARpKrBUuA5wB/lbUuwChGQseePSrxqMKrBeHByIgMJiV5jIXD2gGKhxVeh2Ni
        ZP7KFVXfXwRc/dGP1AwOwlntOEWoVB9sYCTeOnxY1dfgdC7oOnhQ6vC8Z5kI4JmFPqglgNNvKwG0piW4
        TiMc3gYAPvTXkLoAo5hpJ7/3PTWYNlofVGZxdKVx/ainDacTWoMwitc71gFn8eFDDwTOntXHFN4h6Gi/
        FfJexyGVg3Cf0Tj+yiuqvheidb2N/OOOjVV2+C4DOs/7PLUeI4DUBDFUBBAAMiIB1FqVCYIN7B1cQIf8
        F5VLR4+qwRR9a2DOQD9eVGgkZ0kbrpzRsu5P7N4ti/fvq3YaAMvtiool7ei013GIxnNmVT6KipIH4+Oq
        nWpv2XEPx+86vDkq+zGe13aI91qgo9AhLoE0AMgGgKaUOJcbS4AAPsDDCkitI4gNVScWzU7M7vXOTjUY
        17/OAbeQmLrDwz3Goq4CYZPXMevZOPbtew0NYt64IfOzs3L9zTelPy7OUx91nnAcoj3KJjzn5Nw8flyN
        7d2GAYFx1I4coSbPiha24cSdguC40uEAAEhPkPbstRYA7AIEcFhXgPguThA6ARJAN8Lr0fXr3gH14DO1
        tWp56FniVTug5QWin+M6kJAgFzGb+ruGp/qBtNPKcUjNJhzjWHM/+5ka27sULVuGvv51Tz1MFu2nH0cg
        Tq7+h5gPAaA1I1Ha1wFAQ1KMqxa7AAF4K0C6Ad+/W2AYB+3F/u89mtoAjGBdc20RlKZOaUd81ctkhrr+
        vvs6rR33SgNA1LD4Auj98pfVjzEnAMDuh12MgLMZSdKpAdTgzcgXAKOAV3ZwCMaRYg322UdINKoQgLUE
        JhsbvcuGy0UbbpfdMSXU8wrf7XWXOGwTn/UAFn8Zmj5wQI3tBWDZ0vjFL8rv8PyQBUD7YRcBIAFKZ17a
        Xkd9QozrlB8Adh2GkWpp4K3urvXyowBALNcmJqQKz2igzr7amSccX6V0e+08nW5H36241iEKLhuGGtt7
        FrFsOf2pT8n7qHMYdfz5QhFAW1aKdBHA6bgo16k1ESsC+BAD83oY9K+1tqqB1MDWoA/NRXl/5w45jjon
        w8OkNjRY6kKCpcH631VaoNbgIDlryaCCAr3iPT4/Y6kZ9dm2Dv2wr1NQJXQ8LIRbmHyYky0P7Acqy475
        O3ekIiPDE/aWzf5EAO3ZALAhc6+jFgBORj8FAESiB3Ed3bdPDaZDTx9CanEO4PPqmCipjAqXquhwOYF+
        qwC3ek2k0klEGqPNn/jMUy9CTlBsiz6q0FdlZJhU8mfs6EgV0i3/9KoaU+cgHQVX29vlkJ75FQEEmB05
        a6VbAYiJclVjkKcBOIIZYWid/9rX1GC+g0/jlfXX0VFSC2PpBKOqBg4xv9RSSLRuvIO7eY2Ntq62z3jG
        OqzLNmzLPjg5J2HfCf6IGREmByPDZaqjQ42px9aTMfjTn8p7sHGl8KcYAefWAUAhAJyKiXCdgNEr5wAc
        IBCaTIS1xYWy4PNGpw05hAzM+nWJsVJDZ+gwttjTOGfwsHU6IVrqcK3Dm9gSWc9UHdRlG7YlEMI4BRi1
        8THqEFODbY5Fj6kL81EdXsEZ/lyqvj7YpQDkpkpfYTYAREW4qkB2OQBMgEfQ4TEA0Gtw9tAhz6A6CiwQ
        l/A+sG9tipxeEy48XtMh5SA+10MNvOIlpD4Z12Rerc+4p55BrMs2pykLhhv3asOD5bf5+XIdBycWPaY3
        /Ovq5GhggBxFTqHN/nzRIoDO9WnSVwIA1QDA9eUPgHIeHdL5ciyBSoQfAXR8znojs82ChtH86wPy36jT
        mhIvdXQMakyOk8aUWGlS1zhpWgvhuRI+q3tWHdZlm/okwljDn62kITZSfh0RLoP19WoMPRaLBtDxt3+j
        8kN5WKiyeSUIzAHn89KlnwAw+67K8CcB2Geezldg9gnqBCCcwPXaabcaeIkx1ucjr70mv0AfbThsNOGl
        g042p8ZLCz43p/EaLzyLU/zsuYdn/LyWYOA0oqM5LVEa4yLllxiz7d13Vd/+xpurqZGKoACpCA+RcuwW
        tJm2LweBALryCWCdBwCdWwIAa/4J5wGJueIksnwVnrd94kU1uM4DuugZ+eDVV2Uf+jLghIE9Fy9dciY9
        UXgE5SmM11Z8P5vu+cxnFOvxTa0tey1mPlx+mZwo3dXVqk+946jCcSGOd+Zjz6t3mKqoCGUrbdYQ6Ivd
        eYoALmzIkMFSAMC6dh0HNTuAI1hLx4IDn3CeuwUzcy3W9slgvBrvt87j9lmxjGKpfOMN+SEMqY2LkAvr
        06UdW89ZnMAonsTsOptJEEmqzjkAOxrkkF/kr5fRdk/G1z+F66Iz//Ab35Uq2MyJoY209TGEQOWL3XmK
        ALoLMmVwc54HACtrAAwbJpJyHEaOhz7pPLMy3x65ddVjDd8yzipDFhdsBgKCnq3u6pPy45JieQsz0ZQS
        I91Yez0bMoVJiJn43DooN0268jOkG/fcsWHyc4z3v3//dzI3Oan6WM75a7U1OJ6HeXYKiDZqCLSdPvhL
        igTQU6gBhAS5GC4KALc7nfERFVxT3CHY8UnLeW5PzO5MTnXRodK2fas8unJZGWSPBDuE+zihnfiBS368
        IV/2hwTK+6EBWOPRCP94MTKwNADmeGSQ/DIMdrz0ovQ3Wj+326JJFz3GvcEBaSnKE3dUGP+FR9lGG2kr
        babt9IG+0Cf7UiCA3qIsGSkDgGM2AAwX7vc69KtU0sO6x2GEhLkvc2viVoWXKGnC+m6IDpGul1+Seesl
        aQkEFDqgtyweX42DB+W9r35V9j27W/6zIF/+KzdH9u/YLu995SvSiXf8eWt2VTtf561nD8bHpG3bZqmL
        ClFRSJs4MepECVtpM22354PDtqVAAH3FWTJGAEeCAlwMk7cDHPO8AsjS0MdxVB1E4DxDn3s0nefW1Yzs
        fiYzRZrWhEjPX3xC5ufmlIFqOVhOsxDAkgSGYsK5BzhQ3UN0zNueqVn3qcu+tPP3hgbl3O5t0rAmFBOQ
        pGyhTbSNNtJW2mxfCvTJvhQI4GJxNgBsAICAABdn/u3AgHmS4jaiZ98e+upEh4G4Pzdyi8J2xa2LmdzI
        SZXWBLwNfnS73OloU4aqM4L5pCME4QuDhU4vd1+fN26crpH24vXSEh8J8MmeMwQPUxoCbKxBMny8FKwo
        8G6NjwH0l+TIxDYAwEuDi2TeDgxUAJabfbXuGfoYkAOrvZzbGDK3kZUsHczyqbF4x06Xq7/6+eNZZCjz
        sy0iVOF3u+wF3+2Om4iUmZ+4pA07xdnUODGwRXrOEJ4zBm2ibbTRfxRYuQBR4AWwcZ1MbC8EAIfDAyAo
        cN6+9r2zz39FBVkS5pGVhxTOPg3gtkXn+WrZgZeLTmTy88jsnWmxMvxXn5LbTZ6Tm9dB5RhCmZFB57Tz
        KloIikvH47QqeHarrlb6X/64tCdGqDHasWtw2+TYtIG2cDny9OiNAtj8RBToXIBkSAADpTYApPJ2cNA8
        SVUy83P20dh39hluavbpPEMfhrTReezdnXD8fF6aXMAW11OcI93ZidKblyqTX/6i3DzygZi3PP/zxGqK
        ibxw8/gRGf3CK3IhJ1nOZyZKV0GW2jo5FsdUEKyDk3cp+IkC+mKPAk42AQxtypXpXQQQwAjQAGwnPmRT
        vfY9s28lPusYy9Bv4+zz4IJZOQ/jeLzsLsiQ3sIsuYgQY5hdzE2S/vXJMvbSLrn0r3vl92/tl3uIjIf9
        ffJoYkwWrl6RR8ODcre5QW787h2Z/RenDH9su/TlJktPDiAiWfUUZau+OQbPDhyTkUcbVBTAJtq2NBc8
        3hF0MuS5gHkAO4I5tHk9AJTYkmBI0Lw9/NWhByRV5sdLCUOM4e9NfHr2GfrqIJOO2c8QHjD6YDSTDMNs
        aGu+DJdBpdkyvGGtjOQBxpZcGd9eJOO7NsrEnk0yvqNYRjbnylB+igwC1iC2qIFN66Ufs8S+2Gc3+uYY
        HItjLokC5gK9DGArbabt9MF3GfB4DH/NkS3rZXZXidNxOCjgP/j29HZI8Lw3/P0kP535l6z9nBQ1I5yZ
        CzCuB8dLHjAuWs4PwoFhDDSyNU/Gtm1QTk/uLJbJ7YUyie/UxEfylca3FcjYM4Uyiusw6rPtACMIfbFP
        9s0xHkcBAMCGJbnA3zIgABUFnoMREyEgmLRpdnfpP/Ig9B3eBJ2FCoSKZ/1j9tGYx13+WOEBYCU/Zn5k
        Y4a/XvtdyPy+s08HGGbKeeUgHN5eIFM7CmV6ZxFU7NXUDoABFNYZQ7SwDduyj/6NOVYUZKkxOBbHVLnA
        uwwSLQCIAthKm2k7l0G1tQzomwbwelDQIse6sqf0HxzloUF/yeSAvdJUv7vpCEBjdez1Xf/pev0/Tn40
        iiHaCwA8YNBoPfujZQSAmX4GzsNJOj+zqxjh5xE/8x7BsM446o5yyaCtNwrQJ6OALzDeKEDe4e6zZBlY
        WyJPqnoZcDfgz2lqGSAKvu1wLDI6Lm/ZeH9qd3GZw+1whB8NDTzDBIFk8RAhs4C1Y8J5052wxnQnxZru
        lDjTnZpgutMTTXdmsunOTjHd61JNd16a6d6QYboLM013cZbp3phjukvXme4t6013WZ7p3rbBdD9TYLp3
        FJnuXcWm+9mNpvujpab7uU2m+/nNHvHzHtzbXWK6d6LO9kJPu7J8Tz+luaa7BP0Wof8CjJOfbrpzMXbO
        WtOdBVsyYBNto41JMbA52oSDJn2ALyZ8MjHzJibZxNpfAIiHjMirz286pv5ukKUiJKTsSHDwJCG8ERq8
        yIRB6R3BmxTVrsCoiFbLQh2KVGR43vX1ochzLsB5gDuDXh46P3gjxJMjlEq11qncwedazAEXS7LVMlBC
        H+xH5QUsCy479k1xB2IkcrwLOJMwWpg4u7A9c4t+tzh78dKzJXL1Y1u6ZncWrlPOIyTU3w2XRzpSAeD1
        owEBlSDVdsjhMD6wxM+HAhwG7ht4s/IoBAoNMQDKqAwLNSojw4zKqDDjZHSYcSo60jgVS0UZp+KjjTqt
        pFijLjnOaEqJN5qpNCg93jDSkw0jO8XoyEkxzkGdOWlGZ3660Q31UEXZxsXiHGOA2pRjDG/OMUY25xmj
        m/ON0W35xiSEPGJM7So2sKyMS3ugjxYbc89tMq49t9m49nHoxc3GrZc+cvT6x7f+2+iWLXH02funsxqC
        Lvxj6j9Y336avr2C/NT3NwZEW/+/stzTfzD++I+nWVgB+SD4iQd/REU5/sILNh8djv8D8m0QpgTVIXsA
        AAAASUVORK5CYII=
</value>
  </data>
</root>