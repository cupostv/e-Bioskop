<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>