<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>