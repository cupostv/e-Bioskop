<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>