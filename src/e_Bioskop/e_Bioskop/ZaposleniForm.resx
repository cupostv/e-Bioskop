<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>