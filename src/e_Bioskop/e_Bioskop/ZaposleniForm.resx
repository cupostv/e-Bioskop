<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4y5/rPAAsJIfMz+yMcNfr/1OZH7f2acDDDPlvHIQDm8rkqntxTK9owQq9WpqO8AACuuMIVrYhm3Zx8CG
        XCsKstUYHItjqlzgXQaJFgBEAWylzbSdy6DaWgb0TQP4YVDQIsea3V32D45joUF/yeSAvdJUv7vpCEBj
        dez1Xf8Zev0/Tn40iiHaCwA8YNBoPfuj5QSAmX4GzsNJOn9pZynCzyN+5j2CYZ1x1B3lkkFbbxSgT0YB
        X2C8UYC8w91nyTKwtkSeVPUy4G7An9PUMkAUfN/hWGR0XNm84f7UrtJyh9vhCD8SGniWCQLJ4iFCZgFr
        x4TzpjthjelOijXdKXGmOy3BdGckmu6sZNOdk2K616aZ7vx0012YabqLs0x3abbp3pBrusvWmu7N60x3
        eb7p3lpoup8pMt3bS0z3zlKz7tkNZsOHy8zG5zaaTc9vUuLn+t1lZt2u9aZ7R6np3lbsaVde4OmnLM90
        r0e/Jei/COMUZJjuPIydm2q6s2FLJmyibbQxKQY2R5tw0KQP8MWETyZm3sQkm1j7CwDxkBF59fmNR9Xf
        DbJUhISUHw4OniSEn4QGLzJhUHpH8CZFtSswKqLVslCHIhUZnnd9fSjynAtwHuDOoJeHzg/eCPHkCKUy
        rbUqd/C5FnNA//octQyU0Af7UXkBy4LLjn1T3IEYiRyvC2cSRgsTZye2Z27Rh0pzFi8/u16ufmRz58yO
        4rXK+W9afzd8LNKRBgDfPhIQUAlSrQcdDuN9S/x8MMBh4L6BNyuPQqDQEAOgjMqwUKMyMsyojAozTkaH
        GaeiI41TsVSUcSo+2qjTSoo16pLjjKaUeKOZSocy4g0jI9kwclKM9twU4zzUkZtudBRkGN1QD1WSY/SX
        5hqD1MZcY3hTrjGyKd8Y3VRgjG4tMCYh5BFjamepgWVlXN4NfbjUmHtuo3HtuU3GtY9CL24ybr30oSPX
        P7rl30Y3b46jz94/ndUQdOEfU//B+ubT9M0V5Ke+vzEg2vp/leWe/oPxx388zcIKyAfBTzz4EyrK8Rde
        sPnocPwvuEQRD8qkuTsAAAAASUVORK5CYII=
</value>
  </data>
</root>