<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOdjava.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>