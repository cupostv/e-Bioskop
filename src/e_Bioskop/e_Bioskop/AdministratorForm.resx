<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="naziv.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="zanr.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="trajanje.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="naziv.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="zanr.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="trajanje.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>