<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>59</value>
  </metadata>
</root>