<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gcpYBP/fWXDGQAAAABJRU5ErkJggg==
</value>
  </data>
</root>