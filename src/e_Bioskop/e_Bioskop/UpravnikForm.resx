<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Bdn43zfXEX1zVohdAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>59</value>
  </metadata>
</root>